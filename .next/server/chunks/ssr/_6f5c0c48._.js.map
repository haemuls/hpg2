{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/board/view/[id]/BoardDetail.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"btnDelete\": \"BoardDetail-module__4Bv4dq__btnDelete\",\n  \"btnPrimary\": \"BoardDetail-module__4Bv4dq__btnPrimary\",\n  \"commentContent\": \"BoardDetail-module__4Bv4dq__commentContent\",\n  \"commentDelete\": \"BoardDetail-module__4Bv4dq__commentDelete\",\n  \"commentEdit\": \"BoardDetail-module__4Bv4dq__commentEdit\",\n  \"commentItem\": \"BoardDetail-module__4Bv4dq__commentItem\",\n  \"commentMeta\": \"BoardDetail-module__4Bv4dq__commentMeta\",\n  \"commentSection\": \"BoardDetail-module__4Bv4dq__commentSection\",\n  \"commentTitle\": \"BoardDetail-module__4Bv4dq__commentTitle\",\n  \"container\": \"BoardDetail-module__4Bv4dq__container\",\n  \"formGroup\": \"BoardDetail-module__4Bv4dq__formGroup\",\n  \"metaInfo\": \"BoardDetail-module__4Bv4dq__metaInfo\",\n  \"title\": \"BoardDetail-module__4Bv4dq__title\",\n  \"titleRow\": \"BoardDetail-module__4Bv4dq__titleRow\",\n  \"viewerContainer\": \"BoardDetail-module__4Bv4dq__viewerContainer\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///Users/haemul/Desktop/docu/hpground/hpg/src/app/board/view/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport dynamic from 'next/dynamic';\nimport '@toast-ui/editor/dist/toastui-editor.css';\nimport styles from './BoardDetail.module.css';\nimport { getValidJwtToken, getUserNickname } from '../../../../../token'; // 수정된 부분\nimport { useParams, useRouter } from 'next/navigation';\n\n// 게시글 데이터 타입 정의\ninterface Post {\n  id: number;\n  title: string;\n  content: string;\n  createdAt: string;\n  creator: { nickname: string };\n  formattedDate?: string;\n}\n\n// 댓글 데이터 타입 정의\ninterface CommentResponse {\n  id: number;\n  content: string;\n  creator: { nickname: string } | null;\n  createdAt: string;\n  isEditing: boolean;\n}\n\nconst BoardDetailPage = () => {\n  const router = useRouter();\n  const { id } = useParams();\n\n  const [post, setPost] = useState<Post | null>(null);\n  const [comments, setComments] = useState<CommentResponse[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // 게시글 정보 요청 함수\n  const fetchPost = async (id: string) => {\n    setLoading(true);\n    try {\n      const token = await getValidJwtToken();  // 수정된 부분\n      if (!token) throw new Error('토큰이 유효하지 않습니다.');\n\n      const response = await fetch(\n        `https://ec2-3-34-134-27.ap-northeast-2.compute.amazonaws.com/api/boards/${id}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      if (!response.ok) throw new Error('게시글 로딩 오류!');\n      const data = await response.json();\n\n      setPost({\n        ...data.result,\n        formattedDate: new Date(data.result.createdAt).toLocaleDateString(),\n        creator: data.result.creator || { nickname: '알 수 없음' },\n      });\n    } catch (error) {\n      setError(error instanceof Error ? error.message : '게시글 로딩 오류!');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 댓글 목록 요청 함수\n  const fetchComments = async (id: string) => {\n    try {\n      const token = await getValidJwtToken();  // 수정된 부분\n      if (!token) {\n        setError('로그인 하세요!');\n        router.push('/login');\n        return;\n      }\n\n      const response = await fetch(\n        `https://ec2-3-34-134-27.ap-northeast-2.compute.amazonaws.com/api/comments/board/${id}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      if (!response.ok) throw new Error('댓글 로딩 오류!');\n      const data: { result: CommentResponse[] } = await response.json();\n\n      setComments(\n        data.result\n          .map((c) => ({\n            id: c.id,\n            content: c.content,\n            creator: c.creator || { nickname: '익명 사용자' },\n            createdAt: c.createdAt,\n            isEditing: false, // 기본적으로 편집 모드 아님\n          }))\n          .sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())\n      );\n    } catch (error) {\n      setError(error instanceof Error ? error.message : '댓글 로딩 오류!');\n    }\n  };\n\n  // 게시글 삭제 함수\n  const handleDelete = async () => {\n    if (!post) return;\n\n    const token = await getValidJwtToken();  // 수정된 부분\n    if (!token) {\n      setError('로그인이 필요합니다.');\n      return;\n    }\n\n    try {\n      const response = await fetch(\n        `https://ec2-3-34-134-27.ap-northeast-2.compute.amazonaws.com/api/boards/${post.id}`,\n        { method: 'DELETE', headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      if (!response.ok) throw new Error('게시글 삭제에 실패했습니다.');\n      router.push('/board');\n    } catch (error) {\n      setError(error instanceof Error ? error.message : '게시글 삭제 중 문제가 발생했습니다.');\n    }\n  };\n\n  // 페이지가 로드되었을 때 게시글과 댓글을 불러오기\n  useEffect(() => {\n    if (id) {\n      fetchPost(id as string);\n      fetchComments(id as string);\n    }\n  }, [id]);\n\n  return (\n    <div className={styles.container}>\n      {loading && <p>로딩 중...</p>}\n      {error && <p className={styles.error}>{error}</p>}\n      {post && (\n        <div className={styles.post}>\n          <h1>{post.title}</h1>\n          <p>{post.content}</p>\n          <small>{post.formattedDate} | 작성자: {post.creator.nickname}</small>\n          <button onClick={handleDelete} className={styles.deleteButton}>삭제</button>\n        </div>\n      )}\n      <div className={styles.comments}>\n        {comments.map((comment) => (\n          <div key={comment.id} className={styles.comment}>\n            <p>{comment.content}</p>\n            <small>{comment.creator?.nickname || '익명'} | {new Date(comment.createdAt).toLocaleDateString()}</small>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default BoardDetailPage;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///Users/haemul/Desktop/docu/hpground/hpg/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}