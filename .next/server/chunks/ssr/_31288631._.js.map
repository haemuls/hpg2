{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/haemul/Desktop/docu/hpground/hpg/src/app/game/game_create/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport \"../../../../public/styles/bootstrap.css\";\nimport \"../../../../public/styles/game_create.css\";\nimport { getToken, clearTokens, getMembershipId } from '../../../../token';\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL || \"https://ec2-3-34-134-27.ap-northeast-2.compute.amazonaws.com/api/wargame-problems\";\n\ntype WargameProblem = {\n  title: string;\n  detail: string;\n  source: string;\n  kind: string;\n  level: string;\n  flag: string;\n  dockerfileLink: string;\n};\n\nexport default function WargameForm() {\n  const router = useRouter();\n  const [problem, setProblem] = useState<WargameProblem>({\n    title: \"\",\n    detail: \"\",\n    source: \"\",\n    kind: \"\",\n    level: \"⭐⭐\",\n    flag: \"\",\n    dockerfileLink: \"\",\n  });\n\n  const [file, setFile] = useState<File | null>(null);\n\n  useEffect(() => {\n    console.log(\"useEffect: Checking membership ID\");\n    const storedMembershipId = getMembershipId();\n    console.log(\"Stored Membership ID:\", storedMembershipId);\n\n    if (!storedMembershipId) {\n      alert('로그인이 필요합니다.');\n      clearTokens();\n      router.push('/login');\n      return;\n    }\n\n    const loadToken = async () => {\n      console.log(\"Loading token...\");\n      const token = await getToken();\n      console.log(\"Loaded Token:\", token);\n\n      if (!token) {\n        alert('로그인이 만료되었습니다. 다시 로그인 해주세요.');\n        clearTokens();\n        router.push('/login');\n      }\n    };\n\n    loadToken();\n  }, [router]);\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>\n  ) => {\n    const { name, value } = e.target;\n    console.log(`handleChange: ${name} = ${value}`);\n    setProblem((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files.length > 0) {\n      console.log(\"handleFileChange: Selected file:\", e.target.files[0]);\n      setFile(e.target.files[0]);\n    }\n  };\n\n  const handleSubmit = async () => {\n    console.log(\"handleSubmit: Starting submission...\");\n    try {\n      const accessToken = await getToken();\n      console.log(\"handleSubmit: Retrieved Access Token:\", accessToken);\n\n      if (!accessToken) {\n        alert(\"로그인이 만료되었습니다. 다시 로그인 해주세요.\");\n        clearTokens();\n        router.push(\"/login\");\n        return;\n      }\n\n      const levelMap: Record<string, number> = {\n        \"⭐\": 1,\n        \"⭐⭐\": 2,\n        \"⭐⭐⭐\": 3,\n      };\n\n      const problemData = {\n        title: problem.title,\n        type: \"WARGAME\",\n        detail: problem.detail,\n        source: problem.source,\n        tags: [], // tags는 빈 배열로 처리됨\n        kind: problem.kind ? problem.kind.toUpperCase() : \"\",\n        level: levelMap[problem.level] ?? 1,\n        flag: problem.flag,\n        dockerfileLink: problem.dockerfileLink,\n      };\n\n      console.log(\"handleSubmit: Problem Data to Submit:\", problemData);\n\n      const headers = {\n        Authorization: `Bearer ${accessToken}`,\n      };\n\n      const formData = new FormData();\n      formData.append(\"data\", new Blob([JSON.stringify(problemData)], { type: \"application/json\" }));\n\n      if (file) {\n        formData.append(\"file\", file);\n      }\n\n      console.log(\"handleSubmit: FormData with file created:\", formData);\n\n      // 헤더에서 Content-Type을 제거하고, FormData를 body로 전송\n      const response = await fetch(API_BASE_URL, {\n        method: \"POST\",\n        headers, // headers만 사용하고 Content-Type은 제거\n        body: formData,\n      });\n\n      console.log(\"handleSubmit: Response Status:\", response.status);\n\n      if (response.ok) {\n        alert(\"문제가 성공적으로 제출되었습니다.\");\n        router.push(\"/game\");\n      } else {\n        const errorText = await response.text();\n        console.error(\"handleSubmit: Submission failed:\", errorText);\n        alert(\"문제 제출 실패\");\n      }\n    } catch (err) {\n      console.error(\"handleSubmit: Error during submission:\", err);\n      alert(\"문제 제출 중 오류가 발생했습니다.\");\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h3 className=\"pageTitle\">문제 제출</h3>\n      <div className=\"form-group\">\n        <label>제목</label>\n        <input name=\"title\" value={problem.title} onChange={handleChange} className=\"problemSelector\" />\n      </div>\n      <div className=\"form-group\">\n        <label>문제 설명</label>\n        <textarea\n          name=\"detail\"\n          value={problem.detail}\n          onChange={handleChange}\n          className=\"textarea problemSelector\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>문제 종류</label>\n        <select name=\"kind\" value={problem.kind} onChange={handleChange} className=\"problemSelector\">\n          <option value=\"\">문제 종류를 선택하세요</option>\n          <option value=\"WEBHACKING\">웹해킹</option>\n          <option value=\"SYSTEM\">포너블</option>\n          <option value=\"REVERSING\">리버싱</option>\n          <option value=\"CRYPTO\">암호학</option>\n        </select>\n      </div>\n      <div className=\"form-group\">\n        <label>난이도</label>\n        <select name=\"level\" value={problem.level} onChange={handleChange} className=\"problemSelector\">\n          <option value=\"⭐\">⭐ (쉬움)</option>\n          <option value=\"⭐⭐\">⭐⭐ (보통)</option>\n          <option value=\"⭐⭐⭐\">⭐⭐⭐ (어려움)</option>\n        </select>\n      </div>\n      <div className=\"form-group\">\n        <label>정답 플래그</label>\n        <input name=\"flag\" value={problem.flag} onChange={handleChange} className=\"problemSelector\" />\n      </div>\n      <div className=\"form-group\">\n        <label>Dockerfile 링크</label>\n        <input name=\"dockerfileLink\" value={problem.dockerfileLink} onChange={handleChange} className=\"problemSelector\" />\n      </div>\n      <div className=\"form-group\">\n        <label>파일 업로드</label>\n        <input type=\"file\" onChange={handleFileChange} className=\"problemSelector\" />\n      </div>\n      <div className=\"writeButtonWrap\">\n        <button className=\"btnDark\" onClick={handleSubmit}>\n          문제 제출\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 421, "column": 0}, "map": {"version":3,"sources":["file:///Users/haemul/Desktop/docu/hpground/hpg/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}