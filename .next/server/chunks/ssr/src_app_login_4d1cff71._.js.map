{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/login/login1.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"container\": \"login1-module__aIrZPa__container\",\n  \"github__btn\": \"login1-module__aIrZPa__github__btn\",\n  \"google__btn\": \"login1-module__aIrZPa__google__btn\",\n  \"heading\": \"login1-module__aIrZPa__heading\",\n  \"input\": \"login1-module__aIrZPa__input\",\n  \"input__block\": \"login1-module__aIrZPa__input__block\",\n  \"links\": \"login1-module__aIrZPa__links\",\n  \"separator\": \"login1-module__aIrZPa__separator\",\n  \"signin__btn\": \"login1-module__aIrZPa__signin__btn\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/haemul/Desktop/docu/hpground/hpg/src/app/login/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { login } from '../../../token'; // token.ts에서 login 함수 import\nimport styles from './login1.module.css';\n\nconst SignUpPage = () => {\n  const [id, setId] = useState('');\n  const [nickname, setNickname] = useState('');\n  const [password, setPassword] = useState('');\n  const [repeatPassword, setRepeatPassword] = useState('');\n  const [isSignUp, setIsSignUp] = useState(false); // 회원가입 여부 상태\n\n  const toggleForm = (type: 'signin' | 'signup') => {\n    setIsSignUp(type === 'signup');\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (isSignUp && password !== repeatPassword) {\n      alert('Passwords do not match!');\n      return;\n    }\n\n    try {\n      if (isSignUp) {\n        // 회원가입 처리\n        const response = await fetch('https://ec2-3-34-134-27.ap-northeast-2.compute.amazonaws.com/api/users', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            account: id,\n            nickname: nickname,\n            password: password,\n          }),\n        });\n\n        if (response.ok) {\n          alert('회원가입 성공!');\n        } else {\n          const errorMessage = await response.text();\n          alert(`회원가입 실패: ${errorMessage}`);\n        }\n      } else {\n        // 로그인 처리\n        const response = await login(id, password); // token.ts의 login 함수 사용\n\n        if (response) {\n          // 로그인 성공 시 메인 페이지로 리다이렉트\n          window.location.href = '/'; // 메인 페이지로 이동\n        } else {\n          alert('로그인 실패. 다시 시도해 주세요.');\n        }\n      }\n    } catch (error) {\n      console.error('Error during submission:', error);\n      alert('요청 처리 중 오류가 발생했습니다. 다시 시도해주세요.');\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      {/* Heading */}\n      <h1 className={styles.heading}>{isSignUp ? 'SIGN UP' : 'SIGN IN'}</h1>\n\n      {/* Links */}\n      <ul className={styles.links}>\n        <li>\n          <a href=\"#\" onClick={() => toggleForm('signin')} id=\"signin\">로그인</a>\n        </li>\n        <li>\n          <a href=\"#\" onClick={() => toggleForm('signup')} id=\"signup\">회원가입</a>\n        </li>\n      </ul>\n\n      {/* Form */}\n      <form onSubmit={handleSubmit}>\n        <div className={styles.input__block}>\n          <input\n            type=\"text\"\n            placeholder=\"ID\"\n            className={`${styles.input} first-input`}\n            value={id}\n            onChange={(e) => setId(e.target.value)}\n            required\n          />\n        </div>\n        {isSignUp && (\n          <div className={styles.input__block}>\n            <input\n              type=\"text\"\n              placeholder=\"Nickname\"\n              className={`${styles.input} first-input`}\n              value={nickname}\n              onChange={(e) => setNickname(e.target.value)}\n              required\n            />\n          </div>\n        )}\n        <div className={styles.input__block}>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            className={styles.input}\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </div>\n        {isSignUp && (\n          <div className={styles.input__block} id=\"repeat__password\">\n            <input\n              type=\"password\"\n              placeholder=\"Repeat password\"\n              className={styles.input}\n              value={repeatPassword}\n              onChange={(e) => setRepeatPassword(e.target.value)}\n              required\n            />\n          </div>\n        )}\n        <button className={styles.signin__btn} type=\"submit\">\n          {isSignUp ? 'Sign up' : 'Sign in'}\n        </button>\n      </form>\n\n      {/* Separator */}\n      <div className={styles.separator}>\n        <p>OR</p>\n      </div>\n\n      {/* OAuth Buttons */}\n      <button className={styles.google__btn}>\n        Google로 로그인\n      </button>\n      <button className={styles.github__btn}>\n        Github로 로그인\n      </button>\n    </div>\n  );\n};\n\nexport default SignUpPage;\n"],"names":[],"mappings":"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","debugId":null}}]
}