{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/haemul/Desktop/docu/hpground/hpg/src/app/login/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Link from 'next/link';\nimport { login } from '../../../token';\nimport styled, { createGlobalStyle, keyframes } from 'styled-components';\n\n// 글로벌 스타일 정의\nconst GlobalStyle = createGlobalStyle`\n  @import url(\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap\");\n\n  * {\n    box-sizing: border-box;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: \"Open Sans\", sans-serif;\n    font-size: 0.938rem;\n    color: #23004d;\n  }\n\n  h1 {\n    margin: 0;\n  }\n\n  a {\n    text-decoration: none;\n  }\n`;\n\nconst animateLogin = keyframes`\n  0% {\n    transform: scale(1, 1);\n  }\n  50% {\n    transform: scale(1.1, 1.1);\n  }\n  100% {\n    transform: scale(1, 1);\n  }\n`;\n\n// 스타일 컴포넌트 정의\nconst LoginWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  margin: 0 1.5rem;\n`;\n\nconst LoginContent = styled.div`\n  display: grid;\n`;\n\nconst LoginForms = styled.div`\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 130%;\n`;\n\nconst LoginForm = styled.form`\n  width: 100%;\n  background-color: #f2f2f2;\n  padding: 2rem 1rem;\n  border-radius: 1rem;\n  text-align: center;\n  box-shadow: 0 8px 20px rgba(35, 0, 77, 0.2);\n  animation: ${animateLogin} 0.4s ease-in-out;\n`;\n\nconst LoginTitle = styled.h1`\n  font-size: 1.5rem;\n  margin-bottom: 2rem;\n`;\n\nconst LoginBox = styled.div`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  column-gap: 0.5rem;\n  padding: 1.125rem 1rem;\n  background-color: #fff;\n  margin-top: 1rem;\n  border-radius: 0.5rem;\n`;\n\nconst LoginIcon = styled.i`\n  font-size: 1.5rem;\n  color: #4ad395;\n`;\n\nconst LoginInput = styled.input`\n  border: none;\n  outline: none;\n  font-size: 0.938rem;\n  font-weight: 700;\n  color: #23004d;\n  width: 100%;\n\n  ::placeholder {\n    font-size: 0.938rem;\n    font-family: \"Open Sans\", sans-serif;\n    color: #a49eac;\n  }\n`;\n\nconst LoginForgot = styled.a`\n  display: block;\n  width: max-content;\n  margin-left: auto;\n  margin-top: 0.5rem;\n  font-size: 0.813rem;\n  font-weight: 600;\n  color: #a49eac;\n`;\n\nconst LoginButton = styled.button`\n  margin-top: 16px;\n  display: block;\n  width: 100%;\n  max-width: 500px;\n  padding: 1rem;\n  margin: 2rem auto;\n  background-color: #4ad395;\n  color: #fff;\n  font-weight: 600;\n  text-align: center;\n  border-radius: 0.5rem;\n  transition: 0.3s;\n\n  &:hover {\n    background-color: #65bf97;\n  }\n\n  &:disabled {\n    opacity: 0.6;\n  }\n`;\n\nconst LoginSignin = styled(Link)`\n  font-weight: 600;\n  font-size: 0.813rem;\n  color: #4ad395;\n  cursor: pointer;\n`;\n\nconst SocialButton = styled.button`\n  margin-top: 1rem;\n  padding: 0.75rem;\n  background-color: #4ad395;\n  color: #fff;\n  font-weight: 600;\n  border-radius: 0.5rem;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #65bf97;\n  }\n`;\n\nconst LoginPage = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const router = useRouter();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setErrorMessage('');\n\n    try {\n      const response = await login(username, password);\n\n      if (response?.jwtToken) {\n        const { jwtToken, refreshToken, membershipId, nickName } = response;\n\n        if (jwtToken && membershipId && nickName) {\n          localStorage.setItem('jwtToken', jwtToken);\n          localStorage.setItem('refreshToken', refreshToken);\n          localStorage.setItem('membershipId', membershipId);\n          localStorage.setItem('nickname', nickName);\n\n          const event = new CustomEvent('nicknameUpdated', { detail: nickName });\n          window.dispatchEvent(event);\n          router.push('/');\n        } else {\n          setErrorMessage('잘못된 응답을 받았습니다. 다시 시도해 주세요.');\n        }\n      } else {\n        setErrorMessage('아이디 또는 비밀번호가 올바르지 않습니다.');\n      }\n    } catch (error) {\n      console.error('로그인 오류:', error);\n      setErrorMessage('로그인 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const redirectToOAuth = (provider: string) => {\n    window.location.href = `https://ec2-3-34-134-27.ap-northeast-2.compute.amazonaws.com/oauth2/authorization/${provider}`;\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <LoginWrapper>\n        <LoginContent>\n          <LoginForms>\n            <LoginForm onSubmit={handleSubmit}>\n              <LoginTitle>로그인</LoginTitle>\n              {errorMessage && <p>{errorMessage}</p>}\n              <LoginBox>\n                <LoginIcon className=\"bx bx-user\"/>\n                <LoginInput\n                    type=\"text\"\n                    placeholder=\"아이디\"\n                    required\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                />\n              </LoginBox>\n              <LoginBox>\n                <LoginIcon className=\"bx bx-lock\"/>\n                <LoginInput\n                    type=\"password\"\n                    placeholder=\"비밀번호\"\n                    required\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n              </LoginBox>\n              <LoginForgot href=\"#\">비밀번호 찾기</LoginForgot>\n              <LoginButton type=\"submit\" disabled={loading}>\n                {loading ? '로그인 중...' : '로그인'}\n              </LoginButton>\n              <LoginSignin href=\"/signup\">회원가입</LoginSignin>\n              <div style={{display: 'flex', flexDirection: 'column', gap: '10px'}}>\n                <SocialButton onClick={() => redirectToOAuth('google')}>Google로 로그인</SocialButton>\n                <SocialButton onClick={() => redirectToOAuth('github')}>GitHub로 로그인</SocialButton>\n              </div>\n            </LoginForm>\n          </LoginForms>\n        </LoginContent>\n      </LoginWrapper>\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":[],"mappings":"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","debugId":null}}]
}