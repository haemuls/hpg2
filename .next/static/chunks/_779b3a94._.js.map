{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/haemul/Desktop/docu/hpground/hpg/src/app/signup/page.tsx"],"sourcesContent":["'use client';  // 이 줄을 추가합니다.\n\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/navigation';\nimport \"../../../public/styles/signup.css\";\n\nconst SignupPage = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [nickname, setNickname] = useState('');\n  const router = useRouter();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('비밀번호가 일치하지 않습니다.');\n      return;\n    }\n\n    const response = await fetch('https://ec2-3-34-134-27.ap-northeast-2.compute.amazonaws.com/api/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        nickname,\n        account: username,\n        password,\n      }),\n    });\n\n    if (response.ok) {\n      const data = await response.json();\n      const { accessToken, refreshToken } = data;\n\n      localStorage.setItem('accessToken', accessToken);\n      localStorage.setItem('refreshToken', refreshToken);\n\n      console.log('회원가입 성공');\n      alert('회원가입이 완료되었습니다!');\n\n      router.push('/login');\n    } else {\n      console.error('회원가입 실패');\n      alert('회원가입에 실패했습니다.');\n    }\n  };\n\n  return (\n    <div className=\"login\">\n      <div className=\"login__content\">\n        <div className=\"login__forms\">\n          <form onSubmit={handleSubmit} className=\"login__create\" id=\"login-up\">\n            <h1 className=\"login__title\">회원가입</h1>\n\n            <div className=\"login__box\">\n              <i className=\"bx bx-user login__icon\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"아이디\"\n                name=\"username\"\n                className=\"login__input\"\n                required\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n              />\n            </div>\n\n            <div className=\"login__box\">\n              <i className=\"bx bx-lock login__icon\"></i>\n              <input\n                type=\"password\"\n                placeholder=\"비밀번호\"\n                name=\"password\"\n                className=\"login__input\"\n                required\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </div>\n\n            <div className=\"login__box\">\n              <i className=\"bx bx-lock login__icon\"></i>\n              <input\n                type=\"password\"\n                placeholder=\"비밀번호 재입력\"\n                name=\"confirm_password\"\n                className=\"login__input\"\n                required\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              />\n            </div>\n\n            <div className=\"login__box\">\n              <i className=\"bx bx-user login__icon\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"닉네임\"\n                name=\"nickname\"\n                className=\"login__input\"\n                required\n                value={nickname}\n                onChange={(e) => setNickname(e.target.value)}\n              />\n            </div>\n\n            <button type=\"submit\" className=\"login__button\">회원가입</button>\n\n            <div>\n              <span className=\"login__account\">계정이 이미 있다면?</span>\n              <Link href=\"/login\" className=\"login__signin\">로그인</Link>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignupPage;"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA,cAAe,cAAc;;;;;AAO7B,MAAM,aAAa;;IACjB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAEhB,IAAI,aAAa,iBAAiB;YAChC,MAAM;YACN;QACF;QAEA,MAAM,WAAW,MAAM,MAAM,0EAA0E;YACrG,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBACnB;gBACA,SAAS;gBACT;YACF;QACF;QAEA,IAAI,SAAS,EAAE,EAAE;YACf,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,MAAM,EAAE,WAAW,EAAE,YAAY,EAAE,GAAG;YAEtC,aAAa,OAAO,CAAC,eAAe;YACpC,aAAa,OAAO,CAAC,gBAAgB;YAErC,QAAQ,GAAG,CAAC;YACZ,MAAM;YAEN,OAAO,IAAI,CAAC;QACd,OAAO;YACL,QAAQ,KAAK,CAAC;YACd,MAAM;QACR;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAK,UAAU;oBAAc,WAAU;oBAAgB,IAAG;;sCACzD,6LAAC;4BAAG,WAAU;sCAAe;;;;;;sCAE7B,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAE,WAAU;;;;;;8CACb,6LAAC;oCACC,MAAK;oCACL,aAAY;oCACZ,MAAK;oCACL,WAAU;oCACV,QAAQ;oCACR,OAAO;oCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;sCAI/C,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAE,WAAU;;;;;;8CACb,6LAAC;oCACC,MAAK;oCACL,aAAY;oCACZ,MAAK;oCACL,WAAU;oCACV,QAAQ;oCACR,OAAO;oCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;sCAI/C,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAE,WAAU;;;;;;8CACb,6LAAC;oCACC,MAAK;oCACL,aAAY;oCACZ,MAAK;oCACL,WAAU;oCACV,QAAQ;oCACR,OAAO;oCACP,UAAU,CAAC,IAAM,mBAAmB,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;sCAItD,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAE,WAAU;;;;;;8CACb,6LAAC;oCACC,MAAK;oCACL,aAAY;oCACZ,MAAK;oCACL,WAAU;oCACV,QAAQ;oCACR,OAAO;oCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;sCAI/C,6LAAC;4BAAO,MAAK;4BAAS,WAAU;sCAAgB;;;;;;sCAEhD,6LAAC;;8CACC,6LAAC;oCAAK,WAAU;8CAAiB;;;;;;8CACjC,6LAAC,+JAAA,CAAA,UAAI;oCAAC,MAAK;oCAAS,WAAU;8CAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO5D;GAlHM;;QAKW,qIAAA,CAAA,YAAS;;;KALpB;uCAoHS","debugId":null}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["file:///Users/haemul/Desktop/docu/hpground/hpg/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}