{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/haemul/Desktop/docu/hpground/hpg/src/app/game/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useRouter } from 'next/navigation';\nimport { Window, TitleBar, Text } from 'react-desktop/macOs';\nimport '../../../../public/styles/game_start.css';\nimport { getAccessToken } from '../../../../token';\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL || \"https://ec2-3-34-134-27.ap-northeast-2.compute.amazonaws.com/api/wargame-problems\";\nconst FILE_BASE_URL = API_BASE_URL.replace('/api/wargame-problems', '') || \"https://ec2-3-34-134-27.ap-northeast-2.compute.amazonaws.com\";\n\ninterface Problem {\n  title: string;\n  creator: string;\n  level: number;\n  problemFile?: string;\n  content: string;\n  dockerfileLink?: string;\n}\n\ninterface Ranking {\n  nickname: string;\n  created: string;\n}\n\ninterface Comment {\n  id: number;\n  creator: {\n    nickname: string;\n  };\n  createdAt: string;\n  content: string;\n}\n\ninterface ApiResponse<T> {\n  result: T;\n}\n\nconst CTFProblemPage = () => {\n  const params = useParams();\n  const router = useRouter();\n  const problemId = Array.isArray(params?.id) ? params.id[0] : params?.id || \"6\";\n\n  const [problem, setProblem] = useState<Problem | null>(null);\n  const [flag, setFlag] = useState<string>(\"\");\n  const [message, setMessage] = useState<string>(\"\");\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [newComment, setNewComment] = useState<string>(\"\");\n  const [ranking, setRanking] = useState<Ranking[]>([]);\n  const [vmAddress, setVmAddress] = useState<string>(\"\");\n  const [token, setToken] = useState<string | null>(null);\n  const [isTokenLoaded, setIsTokenLoaded] = useState(false);\n\n  useEffect(() => {\n    const storedToken = getAccessToken();\n    setToken(storedToken);\n    setIsTokenLoaded(true); // 토큰 로딩 완료\n  }, []);\n\n  useEffect(() => {\n    if (!isTokenLoaded) return; // 토큰 로딩 완료 전에는 실행하지 않음\n\n    if (!token) {\n      alert(\"로그인이 필요한 서비스입니다.\");\n      router.push(\"/login\"); // 로그인 페이지로 리다이렉트\n      return;\n    }\n\n    const fetchProblem = async () => {\n      try {\n        const res = await fetch(`${API_BASE_URL}/${problemId}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Accept': '*/*',\n          },\n        });\n\n        if (!res.ok) {\n          throw new Error(`문제 API 호출 실패: ${res.status} ${res.statusText}`);\n        }\n\n        const data: ApiResponse<Problem> = await res.json();\n        setProblem(data.result);\n      } catch (error) {\n        console.error(\"문제 가져오기 실패:\", error);\n      }\n    };\n\n    const fetchComments = async () => {\n      try {\n        const res = await fetch(`${FILE_BASE_URL}/api/problems/${problemId}/comments`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Accept': '*/*',\n          },\n        });\n\n        if (!res.ok) {\n          throw new Error(`댓글 API 호출 실패: ${res.status} ${res.statusText}`);\n        }\n\n        const data: ApiResponse<Comment[]> = await res.json();\n        setComments(data.result);\n      } catch (error) {\n        console.error(\"댓글 가져오기 실패:\", error);\n      }\n    };\n\n    const fetchRanking = async () => {\n      try {\n        const res = await fetch(`${FILE_BASE_URL}/api/problems/${problemId}/firstblood?size=5`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Accept': '*/*',\n          },\n        });\n\n        if (!res.ok) {\n          throw new Error(`랭킹 API 호출 실패: ${res.status} ${res.statusText}`);\n        }\n\n        const data: ApiResponse<Ranking[]> = await res.json();\n\n        // result가 배열이 아니면 객체로 반환됨\n        if (Array.isArray(data.result)) {\n          setRanking(data.result);\n        } else {\n          setRanking([data.result]); // 객체를 배열로 감싸서 상태에 저장\n        }\n      } catch (error) {\n        console.error(\"랭킹 조회 실패:\", error);\n      }\n    };\n\n    fetchProblem();\n    fetchComments();\n    fetchRanking();\n  }, [problemId, token, isTokenLoaded]);\n\n  const handleSubmit = async () => {\n    if (!token) return;\n\n    try {\n      const url = `${FILE_BASE_URL}/api/problems/${problemId}/solve?flag=${encodeURIComponent(flag)}`;\n\n      const res = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Authorization\": `Bearer ${token}`,\n          \"Accept\": \"*/*\",\n        },\n      });\n\n      if (!res.ok) {\n        setMessage(\"정답 확인 중 오류가 발생했습니다.\");\n        return;\n      }\n\n      const data = await res.json();\n      setMessage(data.result ? \"정답입니다! 축하합니다.\" : \"오답입니다. 다시 시도하세요.\");\n    } catch (error) {\n      console.error(\"정답 확인 실패:\", error);\n      setMessage(\"정답 확인 중 오류가 발생했습니다.\");\n    }\n  };\n\n  const handleAddComment = async () => {\n    if (newComment.trim() === \"\") return;\n\n    try {\n      const res = await fetch(`${API_BASE_URL}/api/problems/${problemId}/comments`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ content: newComment }),\n      });\n\n      if (!res.ok) {\n        throw new Error(`댓글 작성 실패: ${res.status} ${res.statusText}`);\n      }\n\n      const data = await res.json();\n      setComments((prevComments) => [...prevComments, data.result]);\n      setNewComment(\"\"); // 댓글 작성 후 입력값 초기화\n    } catch (error) {\n      console.error(\"댓글 작성 실패:\", error);\n    }\n  };\n\n  const handleShowVmAddress = () => {\n    setVmAddress(problem?.dockerfileLink || \"VM 주소가 제공되지 않았습니다.\");\n  };\n\n  if (!problem) return <div>로딩 중...</div>;\n\n  const formatTime = (timeString: string) => {\n    const date = new Date(timeString);\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const seconds = date.getSeconds();\n\n    return `${year}-${month < 10 ? '0' : ''}${month}-${day < 10 ? '0' : ''}${day} ${hours}:${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n  };\n\n  return (\n    <Window chrome height=\"100%\" padding=\"20px\">\n      <TitleBar title=\"CTF 문제 상세보기\" controls />\n\n      <div className=\"container\">\n        <div className=\"card\">\n          <h1>\n            {problem.title}{\" \"}\n            <span style={{fontSize: '0.5em'}}>made by {problem.creator}</span>\n          </h1>\n\n          <p>\n            Level: <span style={{color: \"gold\"}}>{'⭐'.repeat(problem.level)}</span>\n          </p>\n\n          {problem.problemFile ? (\n            <p>\n              문제 파일:{\" \"}\n              <a\n                href={`${FILE_BASE_URL}/${problemId}/download`}\n                download\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{color: \"blue\", textDecoration: \"underline\"}}\n              >\n                다운로드\n              </a>\n            </p>\n          ) : (\n            <p>문제 파일 없음</p>\n          )}\n          <p>{problem.content}</p>\n\n          <input\n            type=\"text\"\n            placeholder=\"플래그를 입력하세요\"\n            value={flag}\n            onChange={(e) => setFlag(e.target.value)}\n            className=\"input\"\n          />\n          <button onClick={handleSubmit} className=\"button\">제출</button>\n          {message && <p className=\"message\">{message}</p>}\n        </div>\n\n        <div className=\"ranking-box\">\n          <h3>랭킹</h3>\n          {ranking.length > 0 ? (\n            ranking.map((user, index) => (\n              <div key={index} className=\"ranking-item\">\n                <span className=\"rank\">\n                  {index === 0 ? \"👑\" : index + 1}\n                </span>\n                <span className=\"username\">{user.nickname}</span>\n                <span className=\"solved-time\">{formatTime(user.created)}</span>\n              </div>\n            ))\n          ) : (\n            <p>아직 풀이한 사용자가 없습니다.</p>\n          )}\n        </div>\n\n        <div className=\"card\">\n          <h2>VM 주소</h2>\n          <button onClick={handleShowVmAddress} className=\"button vm-button\">\n            VM 주소 보기\n          </button>\n          {vmAddress && <p className=\"vm-address\">{vmAddress}</p>}\n        </div>\n\n        <div className=\"card\">\n          <h2>댓글</h2>\n          <textarea\n            className=\"textarea\"\n            placeholder=\"댓글을 작성하세요\"\n            value={newComment}\n            onChange={(e) => setNewComment(e.target.value)}\n          ></textarea>\n          <button onClick={handleAddComment} className=\"button comment-button\">\n            댓글 작성\n          </button>\n          <div className=\"comment-list\">\n            {comments.map((comment) => (\n              <div key={comment.id} className=\"comment-item\">\n                <p><strong>{comment.creator?.nickname || \"익명\"}</strong> <span>{formatTime(comment.createdAt)}</span></p>\n                <p>{comment.content}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </Window>\n  );\n};\n\nexport default CTFProblemPage;\n"],"names":[],"mappings":"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","debugId":null}}]
}