{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/haemul/Desktop/docu/hpground/hpg/src/app/game/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useRouter } from 'next/navigation';\nimport '../../../public/styles/styles/game_start.css';\nimport { getAccessToken } from '../../../../token';\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL || \"https://ec2-3-34-134-27.ap-northeast-2.compute.amazonaws.com/api/wargame-problems\";\nconst FILE_BASE_URL = API_BASE_URL.replace('/api/wargame-problems', '') || \"https://ec2-3-34-134-27.ap-northeast-2.compute.amazonaws.com\";\n\ninterface Problem {\n  title: string;\n  creator: string;\n  level: number;\n  problemFile?: string;\n  detail: string;\n  dockerfileLink?: string;\n}\n\ninterface Ranking {\n  nickname: string;\n  firstBlood: string;\n}\n\ninterface Comment {\n  id: number;\n  creator: {\n    nickname: string;\n  };\n  createdAt: string;\n  content: string;\n}\n\ninterface ApiResponse<T> {\n  result: T;\n}\n\nconst CTFProblemPage = () => {\n  const params = useParams();\n  const router = useRouter();\n  const problemId = Array.isArray(params?.id) ? params.id[0] : params?.id || \"6\";\n\n  const [problem, setProblem] = useState<Problem | null>(null);\n  const [flag, setFlag] = useState<string>(\"\");\n  const [message, setMessage] = useState<string>(\"\");\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [newComment, setNewComment] = useState<string>(\"\");\n  const [ranking, setRanking] = useState<Ranking[]>([]);\n  const [vmAddress, setVmAddress] = useState<string>(\"\");\n  const [token, setToken] = useState<string | null>(null);\n  const [isTokenLoaded, setIsTokenLoaded] = useState(false);\n\n  useEffect(() => {\n    const storedToken = getAccessToken();\n    setToken(storedToken);\n    setIsTokenLoaded(true); // 토큰 로딩 완료\n  }, []);\n\n  useEffect(() => {\n    if (!isTokenLoaded) return; // 토큰 로딩 완료 전에는 실행하지 않음\n\n    if (!token) {\n      alert(\"로그인이 필요한 서비스입니다.\");\n      router.push(\"/login\"); // 로그인 페이지로 리다이렉트\n      return;\n    }\n\n    const fetchProblem = async () => {\n      try {\n        const res = await fetch(`https://ec2-3-34-134-27.ap-northeast-2.compute.amazonaws.com/api/problems/${problemId}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Accept': '*/*',\n          },\n        });\n\n        if (!res.ok) {\n          throw new Error(`문제 API 호출 실패: ${res.status} ${res.statusText}`);\n        }\n\n        const data: ApiResponse<Problem> = await res.json();\n        setProblem(data.result);\n      } catch (error) {\n        console.error(\"문제 가져오기 실패:\", error);\n      }\n    };\n\n    const fetchComments = async () => {\n      try {\n        const res = await fetch(`${FILE_BASE_URL}/api/problems/${problemId}/comments`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Accept': '*/*',\n          },\n        });\n\n        if (!res.ok) {\n          throw new Error(`댓글 API 호출 실패: ${res.status} ${res.statusText}`);\n        }\n\n        const data: ApiResponse<Comment[]> = await res.json();\n        setComments(data.result);\n      } catch (error) {\n        console.error(\"댓글 가져오기 실패:\", error);\n      }\n    };\n\n    const fetchRanking = async () => {\n      try {\n        const res = await fetch(`${FILE_BASE_URL}/api/problems/${problemId}/firstblood?size=5`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Accept': '*/*',\n          },\n        });\n\n        if (!res.ok) {\n          throw new Error(`랭킹 API 호출 실패: ${res.status} ${res.statusText}`);\n        }\n\n        const data: ApiResponse<Ranking[]> = await res.json();\n\n        // result가 배열이 아니면 객체로 반환됨\n        if (Array.isArray(data.result)) {\n          setRanking(data.result);\n        } else {\n          setRanking([data.result]); // 객체를 배열로 감싸서 상태에 저장\n        }\n      } catch (error) {\n        console.error(\"랭킹 조회 실패:\", error);\n      }\n    };\n\n    fetchProblem();\n    fetchComments();\n    fetchRanking();\n  }, [problemId, token, isTokenLoaded]);\n\n  const handleSubmit = async () => {\n    if (!token) return;\n\n    try {\n      const url = `${FILE_BASE_URL}/api/problems/${problemId}/solve?flag=${encodeURIComponent(flag)}`;\n\n      const res = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Authorization\": `Bearer ${token}`,\n          \"Accept\": '*/*',\n        },\n      });\n\n      if (!res.ok) {\n        setMessage(\"정답 확인 중 오류가 발생했습니다.\");\n        return;\n      }\n\n      const data = await res.json();\n      setMessage(data.result ? \"정답입니다! 축하합니다.\" : \"오답입니다. 다시 시도하세요.\");\n    } catch (error) {\n      console.error(\"정답 확인 실패:\", error);\n      setMessage(\"정답 확인 중 오류가 발생했습니다.\");\n    }\n  };\n\n  const handleAddComment = async () => {\n    if (newComment.trim() === \"\") return;\n\n    try {\n      const res = await fetch(`${API_BASE_URL}/api/comments`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          type: \"PROBLEM\", // type을 \"PROBLEM\"으로 설정\n          parentId: 0, // 부모 댓글 ID는 0으로 설정\n          contents: newComment, // 기존 content는 contents로 변경\n        }),\n      });\n\n      if (!res.ok) {\n        throw new Error(`댓글 작성 실패: ${res.status} ${res.statusText}`);\n      }\n\n      const data = await res.json();\n      setComments((prevComments) => [...prevComments, data.result]);\n      setNewComment(\"\"); // 댓글 작성 후 입력값 초기화\n    } catch (error) {\n      console.error(\"댓글 작성 실패:\", error);\n    }\n  };\n\n  const handleShowVmAddress = () => {\n    setVmAddress(problem?.dockerfileLink || \"VM 주소가 제공되지 않았습니다.\");\n  };\n\n  if (!problem) return <div>로딩 중...</div>;\n\n  const formatTime = (timeString: string) => {\n    const date = new Date(timeString);\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const seconds = date.getSeconds();\n\n    return `${year}-${month < 10 ? '0' : ''}${month}-${day < 10 ? '0' : ''}${day} ${hours}:${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n  };\n\n  return (\n    <div>\n      <div className=\"window\">\n        <div className=\"title-bar\">\n          <span className=\"title\">{problem.title}</span>\n          <span className=\"level\" style={{ color: \"gold\" }}>\n            {\"⭐\".repeat(problem.level)}\n          </span>\n          <button className=\"close-button\">X</button>\n        </div>\n\n        {problem.problemFile ? (\n          <p>\n            문제 파일:{\" \"}\n            <a\n              href={`${FILE_BASE_URL}/${problem.id}/download`}\n              download\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"download-link\"\n            >\n              다운로드\n            </a>\n          </p>\n        ) : (\n          <p>문제 파일 없음</p>\n        )}\n        <p>{problem.detail}</p>\n\n        {/* 플래그 입력 박스와 제출 버튼 */}\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"플래그를 입력하세요\"\n            value={flag}\n            onChange={(e) => setFlag(e.target.value)}\n            className=\"flag-input\"\n          />\n          <button onClick={handleSubmit} className=\"flag-submit-button\">\n            제출\n          </button>\n        </div>\n\n        {message && <div className=\"message\">{message}</div>}\n\n        <div className=\"ranking-box\">\n          <h3>랭킹</h3>\n          {ranking.length > 0 ? (\n            ranking.map((user, index) => (\n              <div key={index} className=\"ranking-item\">\n                <span className=\"rank\">{index === 0 ? \"👑\" : index + 1}</span>\n                <span className=\"username\">{user.nickname}</span>\n                <span className=\"solved-time\">{formatTime(user.firstBlood)}</span>\n              </div>\n            ))\n          ) : (\n            <div>아직 풀이한 사용자가 없습니다.</div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"card\">\n        <h2>VM 주소</h2>\n        <button onClick={handleShowVmAddress} className=\"button vm-button\">\n          VM 주소 보기\n        </button>\n        {vmAddress && <div className=\"vm-address\">{vmAddress}</div>}\n      </div>\n\n      <div className=\"comment-box\">\n        <h2>댓글</h2>\n        <textarea\n          placeholder=\"댓글을 작성하세요\"\n          value={newComment}\n          onChange={(e) => setNewComment(e.target.value)}\n          className=\"textarea\"\n        />\n        <button onClick={handleAddComment} className=\"button comment-button\">\n          댓글 작성\n        </button>\n        <div className=\"comment-list\">\n          {comments.map((comment) => (\n            <div key={comment.id} className=\"comment-item\">\n              <p>\n                <strong>{comment.creator?.nickname || \"익명\"}</strong> <span>{formatTime(comment.createdAt)}</span>\n              </p>\n              <p>{comment.content}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CTFProblemPage;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 520, "column": 0}, "map": {"version":3,"sources":["file:///Users/haemul/Desktop/docu/hpground/hpg/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}