{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/haemul/Desktop/docu/hpground/hpg/token.ts"],"sourcesContent":["import axios from 'axios';\n\n// API URLs\nconst BASE_URL = 'https://ec2-3-34-134-27.ap-northeast-2.compute.amazonaws.com';\nconst LOGIN_URL = `${BASE_URL}/login`;\nconst TOKEN_VALIDATE_URL = `${BASE_URL}/token-validate`;\nconst TOKEN_REFRESH_URL = `${BASE_URL}/reissue`;\nconst USER_INFO_URL = `${BASE_URL}/api/users`;\n\n// 사용자 정보 타입 정의\ninterface UserInfo {\n  id: number;\n  name: string;\n  email: string;\n  nickname: string;\n  membershipId: string;\n}\n\n// Axios 인스턴스 생성\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// 로그인 요청\nexport const login = async (account: string, password: string) => {\n  try {\n    const response = await axiosInstance.post(LOGIN_URL, { account, password });\n    const { jwtToken, refreshToken, nickName, membershipId } = response.data;\n\n    setTokens(jwtToken, refreshToken);\n    localStorage.setItem('nickname', nickName);\n    localStorage.setItem('membershipId', membershipId);\n\n    setAxiosDefaults(jwtToken);\n\n    return response.data;\n  } catch (error) {\n    console.error('로그인 실패:', error);\n    throw error;\n  }\n};\n\n// 토큰 검증 요청\nexport const validateToken = async (jwtToken: string): Promise<boolean> => {\n  try {\n    const response = await axiosInstance.post(TOKEN_VALIDATE_URL, { jwtToken });\n    return response.data === true;\n  } catch (error) {\n    console.error('토큰 검증 실패:', error);\n    return false;\n  }\n};\n\n// 리프레시 토큰을 통한 액세스 토큰 갱신 요청\nexport const refreshAccessToken = async (\n  membershipId: string,\n  jwtToken: string,\n  refreshToken: string\n): Promise<string | null> => {\n  try {\n    const response = await axiosInstance.post(TOKEN_REFRESH_URL, {\n      membershipId,\n      jwtToken,\n      refreshToken,\n    });\n\n    const { jwtToken: newJwtToken, refreshToken: newRefreshToken } = response.data;\n    setTokens(newJwtToken, newRefreshToken);\n\n    setAxiosDefaults(newJwtToken);\n\n    return newJwtToken;\n  } catch (error) {\n    console.error('토큰 갱신 실패:', error);\n    return null;\n  }\n};\n\n// 사용자 정보 요청\nexport const getUserInfo = async (): Promise<UserInfo> => {\n  try {\n    const membershipId = localStorage.getItem('membershipId');\n    if (!membershipId) {\n      throw new Error('Membership ID not available');\n    }\n\n    const jwtToken = await getToken();\n    if (!jwtToken) {\n      throw new Error('JWT token not available');\n    }\n\n    const response = await axiosInstance.get<UserInfo>(`${USER_INFO_URL}/${membershipId}`, {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error('사용자 정보 가져오기 실패:', error);\n    throw error;\n  }\n};\n\n// 닉네임 가져오기\nexport const getUserNickname = async (): Promise<string | null> => {\n  const nickname = localStorage.getItem('nickname');\n  if (nickname) {\n    return nickname;\n  }\n\n  try {\n    const userInfo = await getUserInfo();\n    return userInfo.nickname;\n  } catch (error) {\n    console.error('닉네임 가져오기 실패:', error);\n    return null;\n  }\n};\n\n// 토큰 관리 함수\nexport const setTokens = (jwtToken: string, refreshToken: string) => {\n  localStorage.setItem('jwtToken', jwtToken);\n  localStorage.setItem('refreshToken', refreshToken);\n};\n\nexport const getJwtToken = () => localStorage.getItem('jwtToken');\nexport const getRefreshToken = () => localStorage.getItem('refreshToken');\nexport const getMembershipId = () => localStorage.getItem('membershipId');\n\nexport const clearTokens = () => {\n  localStorage.removeItem('jwtToken');\n  localStorage.removeItem('refreshToken');\n  localStorage.removeItem('membershipId');\n};\n\n// 유효한 JWT 토큰을 반환하는 함수\nexport const getToken = async (): Promise<string | null> => {\n  let jwtToken = getJwtToken();\n  const refreshToken = getRefreshToken();\n  const membershipId = getMembershipId();\n\n  if (!jwtToken && refreshToken && membershipId) {\n    jwtToken = await refreshAccessToken(membershipId, '', refreshToken);\n  }\n\n  if (jwtToken) {\n    const isValid = await validateToken(jwtToken);\n    if (!isValid && refreshToken && membershipId) {\n      jwtToken = await refreshAccessToken(membershipId, jwtToken, refreshToken);\n    }\n  }\n\n  if (!jwtToken) {\n    return null;\n  }\n\n  return jwtToken;\n};\n\n// Axios 기본 헤더 설정\nexport const setAxiosDefaults = (jwtToken: string) => {\n  axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${jwtToken}`;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///Users/haemul/Desktop/docu/hpground/hpg/src/app/layout.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport Script from 'next/script';\nimport { Dropdown } from 'react-bootstrap';\nimport Link from 'next/link';\nimport { getToken, clearTokens } from '../../token';\n\nconst GA_Measurement_ID = process.env.NEXT_PUBLIC_MEASUREMENT_ID;\n\nconst RootLayout = ({ children }: { children: React.ReactNode }) => {\n  const [nickname, setNickname] = useState<string | null>(null);\n  const [activeUserCount, setActiveUserCount] = useState<number | null>(null);\n  const [activeUsersProblems, setActiveUsersProblems] = useState<Record<number, string[]>>({});\n  const [problemTitles, setProblemTitles] = useState<Record<number, string>>({});\n\n  useEffect(() => {\n    const storedNickname = localStorage.getItem('nickname');\n    if (storedNickname) {\n      setNickname(storedNickname);\n    }\n\n    const checkTokenValidity = async () => {\n      const jwtToken = await getToken();\n      if (!jwtToken) {\n        clearTokens();\n        setNickname(null);\n        setActiveUserCount(null);\n      } else {\n        fetchActiveUsers(jwtToken);\n      }\n    };\n\n    checkTokenValidity();\n  }, []);\n\n  const handleLogout = () => {\n    clearTokens();\n    setNickname(null);\n    setActiveUserCount(null);\n  };\n\n  const fetchActiveUsers = async (token: string) => {\n    try {\n      const response = await fetch(\n        'https://ec2-3-34-134-27.ap-northeast-2.compute.amazonaws.com/api/pods/active?namespace=wargame',\n        {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${token}`,\n            Accept: 'application/json',\n          },\n        }\n      );\n\n      if (response.ok) {\n        const data = await response.json();\n        setActiveUserCount(Object.keys(data).length);\n        fetchUserProblemsTitles(token, data);\n      } else {\n        console.error('Failed to fetch active users:', response.status);\n        setActiveUserCount(null);\n      }\n    } catch (error) {\n      console.error('Error fetching active users:', error);\n      setActiveUserCount(null);\n    }\n  };\n\n  const fetchUserProblemsTitles = async (token: string, activeUsersData: unknown) => {\n    try {\n      const activeUsersProblems: Record<number, string[]> = {};\n      const problemTitles: Record<number, string> = {};\n\n      if (typeof activeUsersData === 'object' && activeUsersData !== null) {\n        const activeUsers = Object.keys(activeUsersData);\n        const problemIds: number[] = [];\n\n        for (const userId of activeUsers) {\n          const activeUserProblems = activeUsersData[userId];\n\n          for (const problemId of activeUserProblems) {\n            problemIds.push(problemId);\n\n            if (!activeUsersProblems[problemId]) {\n              activeUsersProblems[problemId] = [];\n            }\n            activeUsersProblems[problemId].push(userId);\n          }\n        }\n\n        const titles = await fetchProblemTitles(token, problemIds);\n\n        setProblemTitles(titles);\n        setActiveUsersProblems(activeUsersProblems);\n      }\n    } catch (error) {\n      console.error('Error fetching user problems titles:', error);\n    }\n  };\n\n  const fetchProblemTitles = async (token: string, problemIds: number[]): Promise<Record<number, string>> => {\n    const titles: Record<number, string> = {};\n\n    try {\n      const membershipId = localStorage.getItem('membershipId');\n      if (!membershipId) {\n        throw new Error('Membership ID not found');\n      }\n\n      const response = await fetch(\n        `https://ec2-3-34-134-27.ap-northeast-2.compute.amazonaws.com/api/problems/completed?userId=${membershipId}&type=WARGAME&kind=&sortKind=&desc=true&page=0&size=25`,\n        {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${token}`,\n            Accept: 'application/json',\n          },\n        }\n      );\n\n      if (response.ok) {\n        const data = await response.json();\n        data.content.forEach((item: { id: number; title: string }) => {\n          if (problemIds.includes(item.id)) {\n            titles[item.id] = item.title;\n          }\n        });\n      } else {\n        console.error('Failed to fetch problem titles:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching problem titles:', error);\n    }\n\n    return titles;\n  };\n\n  return (\n    <html lang=\"ko\">\n    <head>\n      <title>Hack Playground - CTF 사이트</title>\n      <meta charSet=\"utf-8\"/>\n      <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\"/>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"/>\n      <meta name=\"keywords\" content=\"CTF, 해킹, 보안, 문제 풀이\"/>\n      <meta name=\"description\" content=\"CTF 사이트 테스트용 페이지\"/>\n      <link rel=\"icon\" href=\"/images/test_sione.jpeg\" type=\"image/gif\"/>\n      <link rel=\"stylesheet\" href=\"/styles/bootstrap.css\"/>\n      <link\n          href=\"https://fonts.googleapis.com/css?family=Poppins:400,600,700&display=swap\"\n          rel=\"stylesheet\"\n      />\n      <link rel=\"stylesheet\" href=\"/styles/font-awesome.min.css\"/>\n      <link rel=\"stylesheet\" href=\"/styles/style.css\"/>\n      <link rel=\"stylesheet\" href=\"/styles/responsive.css\"/>\n      <link rel=\"stylesheet\" href=\"/styles/navbar-hover.css\"/>\n      <script\n          async\n          src={`https://www.googletagmanager.com/gtag/js?id=${GA_Measurement_ID}`}\n      />\n      <script\n          dangerouslySetInnerHTML={{\n            __html: `\n          window.dataLayer = window.dataLayer || [];\n          function gtag(){dataLayer.push(arguments);}\n          gtag('js', new Date());\n          gtag('config', '${GA_Measurement_ID}', {\n            page_path: window.location.pathname,\n          });\n        `,\n          }}\n      />\n    </head>\n\n    <body className=\"sub_page\">\n    <div className=\"hero_area\">\n      <header className=\"header_section long_section px-0\">\n        <nav className=\"navbar navbar-expand-lg custom_nav-container\">\n          <Link className=\"navbar-brand\" href=\"/\">\n            <span>Hack Playground</span>\n          </Link>\n\n          <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n                data-target=\"#navbarSupportedContent\"\n              >\n                <span> </span>\n              </button>\n\n              <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav d-flex mx-auto flex-column flex-lg-row align-items-center\">\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" href=\"/\">\n                      HOME\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" href=\"/notice\">\n                      Notice\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" href=\"/game\">\n                      GAME\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" href=\"/ranking\">\n                      Ranking\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" href=\"/board\">\n                      자유 게시판\n                    </Link>\n                  </li>\n                </ul>\n\n                <div className=\"quote_btn-container d-flex align-items-center\">\n                  {nickname ? (\n                    <>\n                      <Dropdown className=\"mr-3\">\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-active-users\">\n                          {activeUserCount !== null\n                            ? `(${activeUserCount}명 접속 중)`\n                            : '접속 중 사용자 수'}\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                          {Object.keys(activeUsersProblems).map((problemId) => {\n                            const problemIdNumber = Number(problemId);\n                            const problemTitle = problemTitles[problemIdNumber];\n\n                            if (activeUsersProblems[problemId].length > 0) {\n                              return (\n                                <Dropdown.Item key={problemId}>\n                                  {problemTitle\n                                    ? problemTitle\n                                    : `문제 ID ${problemId}`} :{' '}\n                                  {activeUsersProblems[problemId].length}명\n                                </Dropdown.Item>\n                              );\n                            }\n                            return null;\n                          })}\n                        </Dropdown.Menu>\n                      </Dropdown>\n\n                      <Dropdown>\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                          {nickname}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                          <Dropdown.Item onClick={handleLogout}>로그아웃</Dropdown.Item>\n                        </Dropdown.Menu>\n                      </Dropdown>\n                    </>\n                  ) : (\n                    <Link href=\"/login\">\n                      <span>Login</span>\n                      <i className=\"fa fa-user\" aria-hidden=\"true\"></i>\n                    </Link>\n                  )}\n                </div>\n              </div>\n            </nav>\n          </header>\n        </div>\n\n\n        <main>{children}</main>\n      </body>\n    </html>\n  );\n};\n\nexport default RootLayout;\n"],"names":[],"mappings":"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","debugId":null}}]
}