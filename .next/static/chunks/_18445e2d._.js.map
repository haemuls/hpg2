{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/haemul/Desktop/docu/hpground/hpg/src/app/game/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport dynamic from 'next/dynamic';\nimport { useRouter } from 'next/navigation';\nimport Link from 'next/link';\nimport { getToken, clearTokens, getMembershipId, getUserNickname } from '../../../../token';\nimport styles from './BoardWritePage.module.css';\nimport '@toast-ui/editor/dist/toastui-editor.css';\n\n// ToastEditor 타입을 가져오기\nimport { Editor as ToastEditorInstance } from '@toast-ui/react-editor';\n\nconst ToastEditor = dynamic(() => import('@toast-ui/react-editor').then((mod) => mod.Editor), {\n  ssr: false,\n});\n\nconst API_BASE_URL = 'https://ec2-3-34-134-27.ap-northeast-2.compute.amazonaws.com';\n\nconst BoardWritePage = () => {\n  const [title, setTitle] = useState('');\n  const editorRef = useRef<ToastEditorInstance>(null);  // 타입을 지정\n  const [nickname, setNickname] = useState<string | null>(null);  // 닉네임 상태 추가\n  const router = useRouter();\n\n  useEffect(() => {\n    const storedMembershipId = getMembershipId();\n\n    if (!storedMembershipId) {\n      alert('로그인이 필요합니다.');\n      clearTokens();\n      router.push('/login');\n      return;\n    }\n\n    const loadToken = async () => {\n      const token = await getToken();  // getValidAccessToken 대신 getToken 사용\n      if (!token) {\n        alert('로그인이 만료되었습니다. 다시 로그인 해주세요.');\n        clearTokens();\n        router.push('/login');\n      }\n    };\n\n    const fetchNickname = async () => {\n      const userNickname = await getUserNickname();\n      if (userNickname) {\n        setNickname(userNickname);\n      }\n    };\n\n    loadToken();\n    fetchNickname();\n  }, [router]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const contents = editorRef.current?.getInstance().getMarkdown();\n\n    if (!title.trim() || !contents.trim()) {\n      alert('제목과 내용을 모두 입력해 주세요.');\n      return;\n    }\n\n    const postData = { title, type: 'FREE', contents, creator: nickname };\n\n    try {\n      const accessToken = await getToken();  // getValidAccessToken 대신 getToken 사용\n      if (!accessToken) {\n        alert('로그인이 만료되었습니다. 다시 로그인 해주세요.');\n        clearTokens();\n        router.push('/login');\n        return;\n      }\n\n      const response = await fetch(`${API_BASE_URL}/api/boards`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${accessToken}`,\n        },\n        body: JSON.stringify(postData),\n      });\n\n      if (!response.ok) {\n        if (response.status === 401) {\n          alert('로그인이 만료되었습니다.');\n          clearTokens();\n          router.push('/login');\n          return;\n        } else if (response.status === 403) {\n          alert('권한이 없습니다.');\n          return;\n        }\n        throw new Error(await response.text());\n      }\n\n      setTitle('');\n      editorRef.current?.getInstance().setMarkdown('');\n      router.push('/board');\n    } catch (error) {\n      console.error('게시글 등록 오류:', error);\n      alert('게시글 등록에 실패했습니다. 다시 시도해 주세요.');\n    }\n  };\n\n  return (\n    <div className={styles.boardWrite}>\n      <div className={styles.container}>\n        <h3>게시글 작성</h3>\n        <form onSubmit={handleSubmit}>\n          <div className={styles.formGroup}>\n            <label htmlFor=\"title\">제목</label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              required\n            />\n          </div>\n          <div className={styles.formGroup} style={{ marginTop: '20px' }}>\n            <label htmlFor=\"content\">내용</label>\n            <ToastEditor ref={editorRef} initialValue=\"\" height=\"500px\" />\n          </div>\n          {/* 버튼을 감싸는 박스 */}\n          <div className={styles.buttonBox}>\n            <button type=\"submit\" className={styles.btn}>\n              문제등록하기\n            </button>\n          </div>\n        </form>\n        <div style={{ marginTop: '20px', textAlign: 'center' }}>\n          <Link href=\"/board\">게시판 목록으로 이동</Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BoardWritePage;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["file:///Users/haemul/Desktop/docu/hpground/hpg/node_modules/next/src/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.tsx"],"sourcesContent":["'use client'\n\nimport type { ReactElement } from 'react'\nimport { BailoutToCSRError } from './bailout-to-csr'\n\ninterface BailoutToCSRProps {\n  reason: string\n  children: ReactElement\n}\n\n/**\n * If rendered on the server, this component throws an error\n * to signal Next.js that it should bail out to client-side rendering instead.\n */\nexport function BailoutToCSR({ reason, children }: BailoutToCSRProps) {\n  if (typeof window === 'undefined') {\n    throw new BailoutToCSRError(reason)\n  }\n\n  return children\n}\n"],"names":["BailoutToCSR","reason","children","window","BailoutToCSRError"],"mappings":"AAAA;;;;;+BAcgBA,gBAAAA;;;eAAAA;;;8BAXkB;AAW3B,SAASA,aAAa,KAAuC;IAAvC,IAAA,EAAEC,MAAM,EAAEC,QAAQ,EAAqB,GAAvC;IAC3B,IAAI,OAAOC,WAAW,aAAa;QACjC,MAAM,OAAA,cAA6B,CAA7B,IAAIC,cAAAA,iBAAiB,CAACH,SAAtB,qBAAA;mBAAA;wBAAA;0BAAA;QAA4B;IACpC;IAEA,OAAOC;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":["file:///Users/haemul/Desktop/docu/hpground/hpg/node_modules/next/src/shared/lib/encode-uri-path.ts"],"sourcesContent":["export function encodeURIPath(file: string) {\n  return file\n    .split('/')\n    .map((p) => encodeURIComponent(p))\n    .join('/')\n}\n"],"names":["encodeURIPath","file","split","map","p","encodeURIComponent","join"],"mappings":";;;;+BAAgBA,iBAAAA;;;eAAAA;;;AAAT,SAASA,cAAcC,IAAY;IACxC,OAAOA,KACJC,KAAK,CAAC,KACNC,GAAG,CAAC,CAACC,IAAMC,mBAAmBD,IAC9BE,IAAI,CAAC;AACV","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file:///Users/haemul/Desktop/docu/hpground/hpg/node_modules/next/src/shared/lib/lazy-dynamic/preload-chunks.tsx"],"sourcesContent":["'use client'\n\nimport { preload } from 'react-dom'\n\nimport { workAsyncStorage } from '../../../server/app-render/work-async-storage.external'\nimport { encodeURIPath } from '../encode-uri-path'\n\nexport function PreloadChunks({\n  moduleIds,\n}: {\n  moduleIds: string[] | undefined\n}) {\n  // Early return in client compilation and only load requestStore on server side\n  if (typeof window !== 'undefined') {\n    return null\n  }\n\n  const workStore = workAsyncStorage.getStore()\n  if (workStore === undefined) {\n    return null\n  }\n\n  const allFiles = []\n\n  // Search the current dynamic call unique key id in react loadable manifest,\n  // and find the corresponding CSS files to preload\n  if (workStore.reactLoadableManifest && moduleIds) {\n    const manifest = workStore.reactLoadableManifest\n    for (const key of moduleIds) {\n      if (!manifest[key]) continue\n      const chunks = manifest[key].files\n      allFiles.push(...chunks)\n    }\n  }\n\n  if (allFiles.length === 0) {\n    return null\n  }\n\n  const dplId = process.env.NEXT_DEPLOYMENT_ID\n    ? `?dpl=${process.env.NEXT_DEPLOYMENT_ID}`\n    : ''\n\n  return (\n    <>\n      {allFiles.map((chunk) => {\n        const href = `${workStore.assetPrefix}/_next/${encodeURIPath(chunk)}${dplId}`\n        const isCss = chunk.endsWith('.css')\n        // If it's stylesheet we use `precedence` o help hoist with React Float.\n        // For stylesheets we actually need to render the CSS because nothing else is going to do it so it needs to be part of the component tree.\n        // The `preload` for stylesheet is not optional.\n        if (isCss) {\n          return (\n            <link\n              key={chunk}\n              // @ts-ignore\n              precedence=\"dynamic\"\n              href={href}\n              rel=\"stylesheet\"\n              as=\"style\"\n            />\n          )\n        } else {\n          // If it's script we use ReactDOM.preload to preload the resources\n          preload(href, {\n            as: 'script',\n            fetchPriority: 'low',\n          })\n          return null\n        }\n      })}\n    </>\n  )\n}\n"],"names":["PreloadChunks","moduleIds","window","workStore","workAsyncStorage","getStore","undefined","allFiles","reactLoadableManifest","manifest","key","chunks","files","push","length","dplId","process","env","NEXT_DEPLOYMENT_ID","map","chunk","href","assetPrefix","encodeURIPath","isCss","endsWith","link","precedence","rel","as","preload","fetchPriority"],"mappings":"AAuCgBgB,QAAQC,GAAG,CAACC,kBAAkB,GACxC,AAAC,UAAOF,QAAQC,GAAG,CAACC,kBAAkB;AAxC5C;;;;;+BAOgBlB,iBAAAA;;;eAAAA;;;;0BALQ;0CAES;+BACH;AAEvB,SAASA,cAAc,KAI7B;IAJ6B,IAAA,EAC5BC,SAAS,EAGV,GAJ6B;IAK5B,+EAA+E;IAC/E,IAAI,OAAOC,WAAW,aAAa;QACjC,OAAO;IACT;IAEA,MAAMC,YAAYC,0BAAAA,gBAAgB,CAACC,QAAQ;IAC3C,IAAIF,cAAcG,WAAW;QAC3B,OAAO;IACT;IAEA,MAAMC,WAAW,EAAE;IAEnB,4EAA4E;IAC5E,kDAAkD;IAClD,IAAIJ,UAAUK,qBAAqB,IAAIP,WAAW;QAChD,MAAMQ,WAAWN,UAAUK,qBAAqB;QAChD,KAAK,MAAME,OAAOT,UAAW;YAC3B,IAAI,CAACQ,QAAQ,CAACC,IAAI,EAAE;YACpB,MAAMC,SAASF,QAAQ,CAACC,IAAI,CAACE,KAAK;YAClCL,SAASM,IAAI,IAAIF;QACnB;IACF;IAEA,IAAIJ,SAASO,MAAM,KAAK,GAAG;QACzB,OAAO;IACT;IAEA,MAAMC,qFAEF;IAEJ,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAAA,YAAA,QAAA,EAAA;kBACGR,SAASY,GAAG,CAAC,CAACC;YACb,MAAMC,OAAUlB,UAAUmB,WAAW,GAAC,YAASC,CAAAA,GAAAA,eAAAA,aAAa,EAACH,SAASL;YACtE,MAAMS,QAAQJ,MAAMK,QAAQ,CAAC;YAC7B,wEAAwE;YACxE,0IAA0I;YAC1I,gDAAgD;YAChD,IAAID,OAAO;gBACT,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAACE,QAAAA;oBAEC,aAAa;oBACbC,YAAW;oBACXN,MAAMA;oBACNO,KAAI;oBACJC,IAAG;mBALET;YAQX,OAAO;gBACL,kEAAkE;gBAClEU,CAAAA,GAAAA,UAAAA,OAAO,EAACT,MAAM;oBACZQ,IAAI;oBACJE,eAAe;gBACjB;gBACA,OAAO;YACT;QACF;;AAGN","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 394, "column": 0}, "map": {"version":3,"sources":["file:///Users/haemul/Desktop/docu/hpground/hpg/node_modules/next/src/shared/lib/lazy-dynamic/loadable.tsx"],"sourcesContent":["import { Suspense, Fragment, lazy } from 'react'\nimport { BailoutToCSR } from './dynamic-bailout-to-csr'\nimport type { ComponentModule } from './types'\nimport { PreloadChunks } from './preload-chunks'\n\n// Normalize loader to return the module as form { default: Component } for `React.lazy`.\n// Also for backward compatible since next/dynamic allows to resolve a component directly with loader\n// Client component reference proxy need to be converted to a module.\nfunction convertModule<P>(\n  mod: React.ComponentType<P> | ComponentModule<P> | undefined\n): {\n  default: React.ComponentType<P>\n} {\n  // Check \"default\" prop before accessing it, as it could be client reference proxy that could break it reference.\n  // Cases:\n  // mod: { default: Component }\n  // mod: Component\n  // mod: { default: proxy(Component) }\n  // mod: proxy(Component)\n  const hasDefault = mod && 'default' in mod\n  return {\n    default: hasDefault\n      ? (mod as ComponentModule<P>).default\n      : (mod as React.ComponentType<P>),\n  }\n}\n\nconst defaultOptions = {\n  loader: () => Promise.resolve(convertModule(() => null)),\n  loading: null,\n  ssr: true,\n}\n\ninterface LoadableOptions {\n  loader?: () => Promise<React.ComponentType<any> | ComponentModule<any>>\n  loading?: React.ComponentType<any> | null\n  ssr?: boolean\n  modules?: string[]\n}\n\nfunction Loadable(options: LoadableOptions) {\n  const opts = { ...defaultOptions, ...options }\n  const Lazy = lazy(() => opts.loader().then(convertModule))\n  const Loading = opts.loading\n\n  function LoadableComponent(props: any) {\n    const fallbackElement = Loading ? (\n      <Loading isLoading={true} pastDelay={true} error={null} />\n    ) : null\n\n    // If it's non-SSR or provided a loading component, wrap it in a suspense boundary\n    const hasSuspenseBoundary = !opts.ssr || !!opts.loading\n    const Wrap = hasSuspenseBoundary ? Suspense : Fragment\n    const wrapProps = hasSuspenseBoundary ? { fallback: fallbackElement } : {}\n    const children = opts.ssr ? (\n      <>\n        {/* During SSR, we need to preload the CSS from the dynamic component to avoid flash of unstyled content */}\n        {typeof window === 'undefined' ? (\n          <PreloadChunks moduleIds={opts.modules} />\n        ) : null}\n        <Lazy {...props} />\n      </>\n    ) : (\n      <BailoutToCSR reason=\"next/dynamic\">\n        <Lazy {...props} />\n      </BailoutToCSR>\n    )\n\n    return <Wrap {...wrapProps}>{children}</Wrap>\n  }\n\n  LoadableComponent.displayName = 'LoadableComponent'\n\n  return LoadableComponent\n}\n\nexport default Loadable\n"],"names":["convertModule","mod","hasDefault","default","defaultOptions","loader","Promise","resolve","loading","ssr","Loadable","options","opts","Lazy","lazy","then","Loading","LoadableComponent","props","fallbackElement","isLoading","pastDelay","error","hasSuspenseBoundary","Wrap","Suspense","Fragment","wrapProps","fallback","children","window","PreloadChunks","moduleIds","modules","BailoutToCSR","reason","displayName"],"mappings":";;;;+BA4EA,WAAA;;;eAAA;;;;uBA5EyC;qCACZ;+BAEC;AAE9B,yFAAyF;AACzF,qGAAqG;AACrG,qEAAqE;AACrE,SAASA,cACPC,GAA4D;IAI5D,iHAAiH;IACjH,SAAS;IACT,8BAA8B;IAC9B,iBAAiB;IACjB,qCAAqC;IACrC,wBAAwB;IACxB,MAAMC,aAAaD,OAAO,aAAaA;IACvC,OAAO;QACLE,SAASD,aACJD,IAA2BE,OAAO,GAClCF;IACP;AACF;AAEA,MAAMG,iBAAiB;IACrBC,QAAQ,IAAMC,QAAQC,OAAO,CAACP,cAAc,IAAM;IAClDQ,SAAS;IACTC,KAAK;AACP;AASA,SAASC,SAASC,OAAwB;IACxC,MAAMC,OAAO;QAAE,GAAGR,cAAc;QAAE,GAAGO,OAAO;IAAC;IAC7C,MAAME,OAAAA,WAAAA,GAAOC,CAAAA,GAAAA,OAAAA,IAAI,EAAC,IAAMF,KAAKP,MAAM,GAAGU,IAAI,CAACf;IAC3C,MAAMgB,UAAUJ,KAAKJ,OAAO;IAE5B,SAASS,kBAAkBC,KAAU;QACnC,MAAMC,kBAAkBH,UAAAA,WAAAA,GACtB,CAAA,GAAA,YAAA,GAAA,EAACA,SAAAA;YAAQI,WAAW;YAAMC,WAAW;YAAMC,OAAO;aAChD;QAEJ,kFAAkF;QAClF,MAAMC,sBAAsB,CAACX,KAAKH,GAAG,IAAI,CAAC,CAACG,KAAKJ,OAAO;QACvD,MAAMgB,OAAOD,sBAAsBE,OAAAA,QAAQ,GAAGC,OAAAA,QAAQ;QACtD,MAAMC,YAAYJ,sBAAsB;YAAEK,UAAUT;QAAgB,IAAI,CAAC;QACzE,MAAMU,WAAWjB,KAAKH,GAAG,GAAA,WAAA,GACvB,CAAA,GAAA,YAAA,IAAA,EAAA,YAAA,QAAA,EAAA;;gBAEG,OAAOqB,WAAW,cAAA,WAAA,GACjB,CAAA,GAAA,YAAA,GAAA,EAACC,eAAAA,aAAa,EAAA;oBAACC,WAAWpB,KAAKqB,OAAO;qBACpC;8BACJ,CAAA,GAAA,YAAA,GAAA,EAACpB,MAAAA;oBAAM,GAAGK,KAAK;;;2BAGjB,CAAA,GAAA,YAAA,GAAA,EAACgB,qBAAAA,YAAY,EAAA;YAACC,QAAO;sBACnB,WAAA,GAAA,CAAA,GAAA,YAAA,GAAA,EAACtB,MAAAA;gBAAM,GAAGK,KAAK;;;QAInB,OAAA,WAAA,GAAO,CAAA,GAAA,YAAA,GAAA,EAACM,MAAAA;YAAM,GAAGG,SAAS;sBAAGE;;IAC/B;IAEAZ,kBAAkBmB,WAAW,GAAG;IAEhC,OAAOnB;AACT;MAEA,WAAeP","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 476, "column": 0}, "map": {"version":3,"sources":["file:///Users/haemul/Desktop/docu/hpground/hpg/node_modules/next/src/shared/lib/app-dynamic.tsx"],"sourcesContent":["import type React from 'react'\nimport type { JSX } from 'react'\nimport Loadable from './lazy-dynamic/loadable'\n\nimport type {\n  LoadableGeneratedOptions,\n  DynamicOptionsLoadingProps,\n  Loader,\n  LoaderComponent,\n} from './lazy-dynamic/types'\n\nexport {\n  type LoadableGeneratedOptions,\n  type DynamicOptionsLoadingProps,\n  type Loader,\n  type LoaderComponent,\n}\n\nexport type DynamicOptions<P = {}> = LoadableGeneratedOptions & {\n  loading?: () => JSX.Element | null\n  loader?: Loader<P>\n  loadableGenerated?: LoadableGeneratedOptions\n  modules?: string[]\n  ssr?: boolean\n}\n\nexport type LoadableOptions<P = {}> = DynamicOptions<P>\n\nexport type LoadableFn<P = {}> = (\n  opts: LoadableOptions<P>\n) => React.ComponentType<P>\n\nexport type LoadableComponent<P = {}> = React.ComponentType<P>\n\nexport default function dynamic<P = {}>(\n  dynamicOptions: DynamicOptions<P> | Loader<P>,\n  options?: DynamicOptions<P>\n): React.ComponentType<P> {\n  const loadableOptions: LoadableOptions<P> = {}\n\n  if (typeof dynamicOptions === 'function') {\n    loadableOptions.loader = dynamicOptions\n  }\n\n  const mergedOptions = {\n    ...loadableOptions,\n    ...options,\n  }\n\n  return Loadable({\n    ...mergedOptions,\n    modules: mergedOptions.loadableGenerated?.modules,\n  })\n}\n"],"names":["dynamic","dynamicOptions","options","mergedOptions","loadableOptions","loader","Loadable","modules","loadableGenerated"],"mappings":";;;;+BAkCA,WAAA;;;eAAwBA;;;;mEAhCH;AAgCN,SAASA,QACtBC,cAA6C,EAC7CC,OAA2B;QAehBC;IAbX,MAAMC,kBAAsC,CAAC;IAE7C,IAAI,OAAOH,mBAAmB,YAAY;QACxCG,gBAAgBC,MAAM,GAAGJ;IAC3B;IAEA,MAAME,gBAAgB;QACpB,GAAGC,eAAe;QAClB,GAAGF,OAAO;IACZ;IAEA,OAAOI,CAAAA,GAAAA,UAAAA,OAAQ,EAAC;QACd,GAAGH,aAAa;QAChBI,OAAO,EAAA,CAAEJ,mCAAAA,cAAcK,iBAAiB,KAAA,OAAA,KAAA,IAA/BL,iCAAiCI,OAAO;IACnD;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 515, "column": 0}, "map": {"version":3,"sources":["file:///Users/haemul/Desktop/docu/hpground/hpg/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}