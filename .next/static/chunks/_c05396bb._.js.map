{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/haemul/Desktop/docu/hpground/hpg/src/app/game/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter, useParams } from \"next/navigation\";\nimport styles from './ProblemDetail.module.css';\nimport { getToken, getUserNickname } from '../../../../token';  // 최신 코드에서 제공한 함수 사용\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL || \"https://ec2-3-34-134-27.ap-northeast-2.compute.amazonaws.com/api/wargame-problems\";\nconst FILE_BASE_URL = API_BASE_URL.replace('/api/wargame-problems', '') || \"https://ec2-3-34-134-27.ap-northeast-2.compute.amazonaws.com\";\n\ninterface Problem {\n  id: number;\n  title: string;\n  creator: string;\n  level: string;\n  detail: string;\n  problemFile?: string;\n  probelmFileSize?: number | null;\n  kind: string;\n  type: string;\n  tags?: string[];\n  reviewer?: string;\n  source?: string;\n  correctCount: number;\n  entireCount: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface Ranking {\n  nickname: string;\n  firstBlood: string;\n}\n\ninterface Comment {\n  id: number;\n  creator: { nickname: string };\n  createdAt: string;\n  content: string;\n  isEditing?: boolean;\n}\n\ninterface ApiResponse<T> {\n  result: T;\n}\n\nconst CTFProblemPage = () => {\n  const { id: problemIdParam } = useParams();\n  const router = useRouter();\n  const problemId = problemIdParam || \"6\";\n\n  const [problem, setProblem] = useState<Problem | null>(null);\n  const [flag, setFlag] = useState<string>(\"\");\n  const [message, setMessage] = useState<string>(\"\");\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [newComment, setNewComment] = useState<string>(\"\");\n  const [ranking, setRanking] = useState<Ranking[]>([]);\n  const [vmAddress, setVmAddress] = useState<string>(\"\");\n  const [userNickname, setUserNickname] = useState<string | null>(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchToken = async () => {\n      const token = await getToken();\n      if (!token) {\n        alert(\"로그인이 필요한 서비스입니다.\");\n        router.push(\"/login\");\n      }\n    };\n\n    fetchToken();\n  }, [router]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = await getToken();\n        if (!token) throw new Error(\"Token is not available\");\n\n        const problemRes = await fetch(`${API_BASE_URL}/${problemId}`, {\n          headers: { 'Authorization': `Bearer ${token}` },\n        });\n        const problemData: ApiResponse<Problem> = await problemRes.json();\n        setProblem(problemData.result);\n\n        const commentsRes = await fetch(`${FILE_BASE_URL}/api/comments/problem/${problemId}`, {\n          headers: { 'Authorization': `Bearer ${token}` },\n        });\n        const commentsData: ApiResponse<Comment[]> = await commentsRes.json();\n        setComments(commentsData.result);\n\n        const rankingRes = await fetch(`${FILE_BASE_URL}/api/problems/${problemId}/firstblood?size=5`, {\n          headers: { 'Authorization': `Bearer ${token}` },\n        });\n        const rankingData: ApiResponse<Ranking[]> = await rankingRes.json();\n        setRanking(rankingData.result);\n\n        const nickname = await getUserNickname();\n        setUserNickname(nickname);\n      } catch (error) {\n        console.error(\"데이터 가져오기 실패:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [problemId]);\n\n  const handleSubmit = async () => {\n    const token = await getToken();\n    if (!token) return;\n\n    try {\n      const res = await fetch(`${FILE_BASE_URL}/api/problems/${problemId}/solve?flag=${encodeURIComponent(flag)}`, {\n        method: \"GET\",\n        headers: { \"Authorization\": `Bearer ${token}` },\n      });\n\n      if (!res.ok) {\n        setMessage(\"정답 확인 중 오류가 발생했습니다.\");\n        return;\n      }\n\n      const data = await res.json();\n      setMessage(data.result ? \"정답입니다! 축하합니다.\" : \"오답입니다. 다시 시도하세요.\");\n    } catch (error) {\n      console.error(\"정답 확인 실패:\", error);\n      setMessage(\"정답 확인 중 오류가 발생했습니다.\");\n    }\n  };\n\n  const handleShowVmAddress = () => {\n    setVmAddress(problem?.dockerfileLink || \"VM 주소가 제공되지 않았습니다.\");\n  };\n\n  const handleCommentSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!newComment.trim()) return;\n\n    const token = await getToken();\n    if (!token) {\n      alert(\"로그인 후 댓글을 작성할 수 있습니다.\");\n      return;\n    }\n\n    try {\n      const res = await fetch(`${FILE_BASE_URL}/api/comments`, {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": `Bearer ${token}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          type: \"PROBLEM\",\n          problemId,\n          contents: newComment,\n        }),\n      });\n\n      if (!res.ok) throw new Error(\"댓글 등록 실패\");\n      const data = await res.json();\n      setComments([data.result, ...comments]);\n      setNewComment(\"\");\n    } catch (error) {\n      console.error(\"댓글 등록 실패:\", error);\n    }\n  };\n\n  const handleCommentDelete = async (commentId: number) => {\n    const token = await getToken();\n    if (!token) {\n      setError('로그인이 필요합니다.');\n      return;\n    }\n\n    try {\n      const response = await fetch(\n        `${FILE_BASE_URL}/api/comments/${commentId}`,\n        { method: 'DELETE', headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      if (!response.ok) throw new Error('댓글 삭제에 실패했습니다.');\n      setComments((prev) => prev.filter((comment) => comment.id !== commentId));\n    } catch (error) {\n      setError(error instanceof Error ? error.message : '댓글 삭제 중 문제가 발생했습니다.');\n    }\n  };\n\n  const handleCommentEditToggle = (commentId: number) => {\n    setComments((prev) =>\n      prev.map((comment) =>\n        comment.id === commentId ? { ...comment, isEditing: !comment.isEditing } : comment\n      )\n    );\n  };\n\n  const handleCommentEdit = async (commentId: number, newContent: string) => {\n    const token = await getToken();\n    if (!token) {\n      setError('로그인이 필요합니다.');\n      return;\n    }\n\n    try {\n      const response = await fetch(\n        `${FILE_BASE_URL}/api/comments/${commentId}`,\n        {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`,\n          },\n          body: JSON.stringify({\n            type: 'PROBLEM',\n            contents: newContent,\n          }),\n        }\n      );\n\n      if (response.status === 403) {\n        throw new Error('권한이 없습니다.');\n      }\n      if (!response.ok) {\n        throw new Error('댓글 수정에 실패했습니다.');\n      }\n\n      const updatedComment = await response.json();\n\n      setComments((prev) =>\n        prev.map((comment) =>\n          comment.id === commentId ? { ...comment, content: updatedComment.contents, isEditing: false } : comment\n        )\n      );\n    } catch (error) {\n      setError(error instanceof Error ? error.message : '댓글 수정 중 문제가 발생했습니다.');\n    }\n  };\n\n  if (loading) return <p>문제를 불러오는 중입니다...</p>;\n\n  if (!problem) return <p>문제를 찾을 수 없습니다.</p>;\n\n  return (\n    <section className={styles.container}>\n      <h3 className={styles.title}>{problem.title}</h3>\n      <p className={styles.metaInfo}>\n        출제자: {problem.creator} | 유형: {problem.kind} | 카테고리: {problem.type}\n      </p>\n      <p className={styles.metaInfo}>\n        출제일: {new Date(problem.createdAt).toLocaleString()} | 리뷰어: {problem.reviewer}\n      </p>\n      <p className={`${styles.metaInfo} ${styles.last}`}>\n        정답률: {problem.entireCount === 0 ? '제출 없음' : `${((problem.correctCount / problem.entireCount) * 100).toFixed(2)}%`}\n        ({problem.correctCount}/{problem.entireCount})\n      </p>\n\n      {problem.tags?.length > 0 && (\n        <div className={styles.metaInfo}>\n          태그: {problem.tags.join(', ')}\n        </div>\n      )}\n\n      {problem.source && (\n        <div className={styles.metaInfo}>\n          출처: {problem.source}\n        </div>\n      )}\n\n      <div className={styles.viewerContainer}>\n        <div dangerouslySetInnerHTML={{ __html: problem.detail }} />\n\n        {problem.problemFile && (\n          <div>\n            <a href={`${FILE_BASE_URL}/uploads/${problem.problemFile}`} download>\n              문제 파일 다운로드\n            </a>\n          </div>\n        )}\n        {/* 도커 관련 부분 주석 처리 */}\n        {/* {problem.kind === \"docker\" && (\n          <div>\n            <button onClick={handleShowVmAddress}>VM 주소 보기</button>\n            {vmAddress && <p>{vmAddress}</p>}\n          </div>\n        )} */}\n      </div>\n\n      <div className={styles.rankings}>\n        <h4>1등 기록</h4>\n        {ranking.length === 0 ? (\n          <p>첫 번째 풀이자가 없습니다.</p>\n        ) : (\n          <ul>\n            {ranking.map((entry, index) => (\n              <li key={index}>\n                {entry.nickname} (첫 풀이: {entry.firstBlood})\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n\n      <div className={styles.flagInput}>\n        <h4>정답 제출</h4>\n        <input\n          type=\"text\"\n          value={flag}\n          onChange={(e) => setFlag(e.target.value)}\n          placeholder=\"정답을 입력하세요\"\n        />\n        <button onClick={handleSubmit}>제출</button>\n        {message && <p>{message}</p>}\n      </div>\n\n      <div className={styles.commentsSection}>\n        <h4>댓글</h4>\n        <form onSubmit={handleCommentSubmit}>\n          <textarea\n            value={newComment}\n            onChange={(e) => setNewComment(e.target.value)}\n            placeholder=\"댓글을 입력하세요\"\n          />\n          <button type=\"submit\" disabled={isSubmitting}>\n            댓글 작성\n          </button>\n        </form>\n\n        {comments.length === 0 && <p>댓글이 없습니다.</p>}\n\n        {comments.map((comment) => (\n          <div key={comment.id} className={styles.commentSection}>\n            <p>\n              {comment.creator.nickname}{\" \"}\n              <span>{new Date(comment.createdAt).toLocaleString()}</span>\n            </p>\n            {comment.isEditing ? (\n              <div>\n                <textarea\n                  value={comment.content}\n                  onChange={(e) =>\n                    handleCommentEdit(comment.id, e.target.value)\n                  }\n                />\n                <button onClick={() => handleCommentEditToggle(comment.id)}>\n                  취소\n                </button>\n              </div>\n            ) : (\n              <p>{comment.content}</p>\n            )}\n\n            <button onClick={() => handleCommentDelete(comment.id)}>삭제</button>\n            <button onClick={() => handleCommentEditToggle(comment.id)}>\n              {comment.isEditing ? '저장' : '수정'}\n            </button>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default CTFProblemPage;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 570, "column": 0}, "map": {"version":3,"sources":["file:///Users/haemul/Desktop/docu/hpground/hpg/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}